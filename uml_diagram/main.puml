@startuml

package main {
	class App {
		pub terminal: Terminal
		pub config: Config
		pub update_line: String
		pub app_title: String
		pub current_screen: Screen
		current_filter: Filter
		channel_list: ChannelList
		current_selected: usize
		backup_list: ChannelList
		---
		::new_with_channel_list(ChannelList) -> App
		action(Action)
		pub update_channel_list(ChannelList)
		set_channel_list(ChannelList)
		get_channel_list -> ChannelList
		filter_channel_list(Filter)
		get_current_selected -> usize
		update
		get_selected_channel -> Options<&mut Channel>
		get_selected_video -> Options<&mut Video>
		save
	}

	enum Action {
		Mark
		Unmark
	}

	enum Filter {
		All
		OnlyNew
	}
	enum Screen {
		Channels
		Videos
	}

	App o-- Screen
	App o-- Filter

}

rectangle {
	package fetch_data {
		class UrlFile {
			atom: Vec<String>
			rss: Vec<String>
			---
			len -> usize
			get_mixec -> Vec<FeedType>
		}

		enum FeedType {
			Atom(String)
			Rss(String)
		}

		object Functions {
			pub fn fetch_new_videos(Sender<String>) -> ChannelList
			pub fn write_history(&ChannelList)
			pub fn read_history() -> Option<ChannelList>
			fn notify_user(String)
			fn read_urls_file() -> UrlFile
			
		}
	}

	package config {
		class Config {
			show_empty_channels
			mark_on_open
			down_on_mark
			app_title
			update_at_start
			---
			::default
			::read_config_file
		}
	}
}

App o-- Config

@enduml
